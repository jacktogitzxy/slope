if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        if (project.hasProperty('RTMP_KEY')) {
            println("RTMPKEY IS :" + RTMP_KEY)
            buildConfigField 'String', 'RTMP_KEY', RTMP_KEY
        } else {

            println("NO RTMPKEY FOUND")
            /*
            *本Key为3个月临时授权License，如需商业使用，请邮件至support@easydarwin.org了解此产品的授权信息。
            */
            buildConfigField 'String', 'RTMP_KEY', "\"79397037795A36526D3432415A6768636F2F655A4A656876636D63755A57467A65575268636E64706269356C59584E35636E52746346634D5671442F70654E4659584E355247467964326C755647566862556C7A5647686C516D567A644541794D4445345A57467A65513D3D\""
        }
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        flavorDimensions "versionCode"
//        ndk {
//            //选择要添加的对应cpu类型的.so库。   // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
//            abiFilters 'armeabi-v7a' //'armeabi-v7a',  'arm64-v8a'
//            moduleName "app"
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    dataBinding {
//        enabled = true
//    }
//    android.applicationVariants.all { variant ->
//        variant.outputs.all {
//            outputFileName = variant.flavorName + "-" + variant.versionCode + "-" + variant.versionName + ".apk"
//        }
//    }
    productFlavors {
        rtmp {}
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
    google()
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    compile rootProject.ext.dependencies.appcompat_v7
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:preference-v7:27.1.1'
    compile rootProject.ext.dependencies.design
    compile rootProject.ext.dependencies.okhttp3_logging
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    compile rootProject.ext.dependencies.glide
    compile rootProject.ext.dependencies.arouter_api
    annotationProcessor rootProject.ext.dependencies.arouter_compiler
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.github.chrisbanes:PhotoView:1.3.0'
    implementation project(':library')
    implementation 'com.squareup:otto:1.3.8'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation 'com.budiyev.android:code-scanner:1.7.4'
}
